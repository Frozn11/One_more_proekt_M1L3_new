import telebot # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ telebot
import random
from setting import TOKEN, APPID # –∏–º–ø–æ—Ä—Ç —Ç–æ–∫–µ–Ω–∞
import requests
import time

bot = telebot.TeleBot(TOKEN) 


@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–≥—É —É–ø—Ä–∞–≤–ª—è—Ç—å —á–∞—Ç–æ–º –∏ –¥—Ä—É–≥–∏–µ –≤–µ—â–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã")~
@bot.message_handler(commands=['help'])

def help(message):
    chat_id = message.chat.id 
    bot.send_message(chat_id, "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /weather \n \n –í—ã –º–æ–∂–µ—Ç–µ –∫–∏–Ω—É—Ç—å –º–æ–Ω–µ—Ç–∫—É –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /coin \n \n –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –±–æ—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /ping \n \n –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ —á–∞—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /ban (–≤–∞–º –Ω—É–∂–Ω–æ –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º) \n \n –í—ã –º–æ–∂–µ—Ç–µ –∫–∏–∫–Ω—É—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ —á–∞—Ç–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /kick (–≤–∞–º –Ω—É–∂–Ω–æ –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º) \n \n –í—ã –º–æ–∂–µ—Ç–µ —É–±—Ä–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç –Ω–∞ –≤—Ä–µ–º—è –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /mute (–≤–∞–º –Ω—É–∂–Ω–æ –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º) \n \n –í—ã –º–æ–∂–µ—Ç–µ —É–±—Ä–∞—Ç—å mute –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª –≤ mute –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /unmute (–≤–∞–º –Ω—É–∂–Ω–æ –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)")


@bot.message_handler(commands=['coin'])
def coin_event(message):
    coin_list = ['–æ—Ä–µ–ª', '—Ä–µ—à–∫–∞']
    coin_return = random.choice(coin_list)
    bot.reply_to(message, coin_return)

@bot.message_handler(commands=["ping"])
def on_ping(message):
    bot.reply_to(message, "–í—Å–µ –µ—â—ë —Ä–∞–±–æ—Ç–∞—é!") 

#–Ø —Ä–µ—à–∏–ª –≤—ã–∫–ª—é—á–∏—Ç—å –ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ –º–æ–∂–µ—Ç —Ä–∞–∑–¥—Ä–∞–∂–∞—Ç—å
# @bot.message_handler(content_types=['new_chat_members'])
# def make_some(message):
#     bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–æ–≤–æ–π —É—á–∞—Å–Ω–∏–∫!')
#     bot.approve_chat_join_request(message.chat.id, message.from_user.id)

@bot.message_handler(commands=['ban'])
def ban_user(message):
    if message.reply_to_message: #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ 
        chat_id = message.chat.id # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ id —á–∞—Ç–∞
         # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ id –∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        user_id = message.reply_to_message.from_user.id
        user_status = bot.get_chat_member(chat_id, user_id).status 
         # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_status == 'administrator' or user_status == 'creator':
            bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        else:
            bot.ban_chat_member(chat_id, user_id) # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å user_id –±—É–¥–µ—Ç –∑–∞–±–∞–Ω–µ–Ω –≤ —á–∞—Ç–µ —Å chat_id
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.reply_to_message.from_user.username} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å.")

@bot.message_handler(commands=['mute'])
def mute_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        user_status = bot.get_chat_member(chat_id, user_id).status
        if user_status == 'administrator' or user_status == 'creator':
            bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–º—É—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        else:
            duration = 60 # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - 1 –º–∏–Ω—É—Ç–∞
            args = message.text.split()[1:]
            if args:
                try:
                    duration = int(args[0])
                except ValueError:
                    bot.reply_to(message, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏.")
                    return
                if duration < 1:
                    bot.reply_to(message, "–í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
                    return
                if duration > 1440:
                    bot.reply_to(message, "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è - 1 –¥–µ–Ω—å.")
                    return
            bot.restrict_chat_member(chat_id, user_id, until_date=time.time()+duration*60)
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} –∑–∞–º—É—á–µ–Ω –Ω–∞ {duration} –º–∏–Ω—É—Ç.")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å.")


@bot.message_handler(commands=['unmute'])
def unmute_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        bot.restrict_chat_member(chat_id, user_id, can_send_messages=True, can_send_media_messages=True, can_send_other_messages=True, can_add_web_page_previews=True)
        bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} —Ä–∞–∑–º—É—á–µ–Ω.")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º—É—Ç–∏—Ç—å.")

@bot.message_handler(commands=['kick'])
def kick_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        user_status = bot.get_chat_member(chat_id, user_id).status
        if user_status == 'administrator' or user_status == 'creator':
            bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∫–∏–∫–Ω—É—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        else:
            bot.kick_chat_member(chat_id, user_id)
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} –±—ã–ª –∫–∏–∫–Ω—É—Ç.")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–∏–∫–Ω—É—Ç—å.")

@bot.message_handler(commands=['weather'])
def weather(message):
  sent = bot.send_message(message.chat.id, 'Please enter city name')
  bot.register_next_step_handler(sent, weatherNow)

def weatherNow(message): 

    chat_id = message.chat.id

    emojes = {
    "–ø–∞—Å–º—É—Ä–Ω–æ": ["üåß"],
    "—è—Å–Ω–æ": ["‚òÄ"],
    "–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏": ["üå•"],
    "–¥–æ–∂–¥—å": ["üåß"],
    "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å": ["üå•"],
    "–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å": ["üåß"]
    }
    city_id = 0
    try:
        res = requests.get("http://api.openweathermap.org/data/2.5/find",
                params={'q': message.text, 'type': 'like', 'units': 'metric', 'APPID': APPID})
        data = res.json()
        cities = ["{} ({})".format(d['name'], d['sys']['country'])
                for d in data['list']]
        print("city:", cities)
        city_id = data['list'][0]['id']
        print("success")
    except Exception as e:
        print("Exception (find):", e)
        pass
    try:
        res = requests.get("http://api.openweathermap.org/data/2.5/weather",
                        params={'id': city_id, 'units': 'metric', 'lang': 'ru', 'APPID': APPID})
        data = res.json()
        # print(data)
        word = data["weather"][0]['description']
        word = emojes.get(word, [])
        word =  "".join(word)
        if not word:
            print("no")
        bot.send_message(chat_id, f"—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {data['main']['temp']}¬∞ \n–ø–æ–≥–æ–¥–∞: {data['weather'][0]['description']} {word} \n–º–∞–∫—Å.—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {data['main']['temp_min']}¬∞ \n–º–∏–Ω–∏.—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {data['main']['temp_max']}¬∞")
    except Exception as e:
        print("Exception (weather):", e)
        pass


bad_words = ['lol', 'https:/']
def check_message(message):
    for word in bad_words:
        if word in message.text.lower():
            return True
    return False

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤
    if check_message(message):
        # –µ—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ, –∫–∏–∫–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # bot.kick_chat_member(message.chat.id, message.from_user.id)
        bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} –ë–ê–ù")
    else:
        # –µ—Å–ª–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –Ω–µ—Ç, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞–ª—å—à–µ
        print(message.text)



bot.infinity_polling(none_stop=True)
